{"version":3,"sources":["components/Feedback/Feedback.module.css","components/Feedback/Statistics.js","components/Feedback/FeedbackOptions.js","components/Feedback/Notofication.js","components/Feedback/Feedback.js","components/App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","countPositiveFeedbackPercentage","className","styles","statisticsTitle","statisticsValue","FeedbackOptions","onLeaveFeedback","feedbackBtn","value","type","onClick","Notofication","noFeedback","Feedback","state","props","countTotalFeedback","Math","round","handleFeedbackBtn","e","currentTarget","setState","prevState","this","container","title","Component","defaultProps","App","ReactDOM","render","document","querySelector"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,UAAY,4BAA4B,MAAQ,wBAAwB,gBAAkB,kCAAkC,gBAAkB,kCAAkC,WAAa,6BAA6B,YAAc,gC,uHCkC3OC,EA/BI,SAAC,GAAD,IACjBC,EADiB,EACjBA,KACAC,EAFiB,EAEjBA,QACAC,EAHiB,EAGjBA,IACAC,EAJiB,EAIjBA,MACAC,EALiB,EAKjBA,gCALiB,OAOjB,kBAAC,WAAD,KACE,uBAAGC,UAAWC,IAAOC,iBAArB,cACCJ,EAAQ,GACP,6BACE,uBAAGE,UAAWC,IAAOE,iBAArB,SAA6CR,GAC7C,uBAAGK,UAAWC,IAAOE,iBAArB,YAAgDP,GAChD,uBAAGI,UAAWC,IAAOE,iBAArB,QAA4CN,GAC5C,uBAAGG,UAAWC,IAAOE,iBAArB,UAA8CL,GAC9C,uBAAGE,UAAWC,IAAOE,iBAArB,sBACsBJ,EADtB,QCkBOK,EAjCS,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAH,OACtB,6BACE,4BACEL,UAAWC,IAAOK,YAClBC,MAAM,OACNC,KAAK,SACLC,QAASJ,GAJX,QAQA,4BACEL,UAAWC,IAAOK,YAClBC,MAAM,UACNC,KAAK,SACLC,QAASJ,GAJX,WAQA,4BACEL,UAAWC,IAAOK,YAClBC,MAAM,MACNC,KAAK,SACLC,QAASJ,GAJX,SCfWK,EAJM,kBACnB,uBAAGV,UAAWC,IAAOU,YAArB,sBCGmBC,E,4MAanBC,MAAQ,CACNlB,KAAM,EAAKmB,MAAMnB,KACjBC,QAAS,EAAKkB,MAAMlB,QACpBC,IAAK,EAAKiB,MAAMjB,K,EAGlBkB,mBAAqB,WACnB,OAAO,EAAKF,MAAMlB,KAAO,EAAKkB,MAAMjB,QAAU,EAAKiB,MAAMhB,K,EAG3DE,gCAAkC,WAChC,IAAMD,EAAQ,EAAKiB,qBACnB,OAAOC,KAAKC,MAAO,EAAKJ,MAAMlB,KAAOG,EAAS,M,EAGhDoB,kBAAoB,SAAAC,GACY,SAA1BA,EAAEC,cAAcb,MAClB,EAAKc,UAAS,SAAAC,GAAS,MAAK,CAC1B3B,KAAM2B,EAAU3B,KAAO,MAEU,YAA1BwB,EAAEC,cAAcb,MACzB,EAAKc,UAAS,SAAAC,GAAS,MAAK,CAC1B1B,QAAS0B,EAAU1B,QAAU,MAEI,QAA1BuB,EAAEC,cAAcb,OACzB,EAAKc,UAAS,SAAAC,GAAS,MAAK,CAC1BzB,IAAKyB,EAAUzB,IAAM,O,uDAKjB,IAAD,EACwB0B,KAAKV,MAA5BlB,EADD,EACCA,KAAME,EADP,EACOA,IAAKD,EADZ,EACYA,QAEnB,OACE,yBAAKI,UAAWC,IAAOuB,WACrB,uBAAGxB,UAAWC,IAAOwB,OAArB,yBACA,kBAAC,EAAD,CAAiBpB,gBAAiBkB,KAAKL,oBACvC,kBAAC,EAAD,CACEvB,KAAMA,EACNE,IAAKA,EACLD,QAASA,EACTE,MAAOyB,KAAKR,qBACZhB,gCAAiCwB,KAAKxB,oCAEvCwB,KAAKR,qBAAuB,GAAK,kBAAC,EAAD,W,GA1DJW,aAAjBd,EACZe,aAAe,CACpBhC,KAAM,EACNE,IAAK,EACLD,QAAS,GCRb,IAMegC,EANH,kBACV,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAUjC,KAAM,EAAGC,QAAS,EAAGC,IAAK,MCDxCgC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.2c687be3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Feedback_container__3tI6O\",\"title\":\"Feedback_title__2EOHV\",\"statisticsTitle\":\"Feedback_statisticsTitle__4tMvm\",\"statisticsValue\":\"Feedback_statisticsValue__2MXem\",\"noFeedback\":\"Feedback_noFeedback__2szzK\",\"feedbackBtn\":\"Feedback_feedbackBtn__3MTgu\"};","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Feedback.module.css';\r\n\r\nconst Statistics = ({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  countPositiveFeedbackPercentage,\r\n}) => (\r\n  <Fragment>\r\n    <p className={styles.statisticsTitle}>Statistics</p>\r\n    {total > 0 && (\r\n      <div>\r\n        <p className={styles.statisticsValue}>Good: {good}</p>\r\n        <p className={styles.statisticsValue}>Neutral: {neutral}</p>\r\n        <p className={styles.statisticsValue}>Bad: {bad}</p>\r\n        <p className={styles.statisticsValue}>Total: {total}</p>\r\n        <p className={styles.statisticsValue}>\r\n          Positive feedback: {countPositiveFeedbackPercentage}%\r\n        </p>\r\n      </div>\r\n    )}\r\n  </Fragment>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  countPositiveFeedbackPercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Feedback.module.css';\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback }) => (\r\n  <div>\r\n    <button\r\n      className={styles.feedbackBtn}\r\n      value=\"good\"\r\n      type=\"button\"\r\n      onClick={onLeaveFeedback}\r\n    >\r\n      Good\r\n    </button>\r\n    <button\r\n      className={styles.feedbackBtn}\r\n      value=\"neutral\"\r\n      type=\"button\"\r\n      onClick={onLeaveFeedback}\r\n    >\r\n      Neutral\r\n    </button>\r\n    <button\r\n      className={styles.feedbackBtn}\r\n      value=\"bad\"\r\n      type=\"button\"\r\n      onClick={onLeaveFeedback}\r\n    >\r\n      Bad\r\n    </button>\r\n  </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport styles from './Feedback.module.css';\r\n\r\nconst Notofication = () => (\r\n  <p className={styles.noFeedback}>No feedback given</p>\r\n);\r\n\r\nexport default Notofication;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Statistics from './Statistics';\r\nimport FeedbackOptions from './FeedbackOptions';\r\nimport Notification from './Notofication';\r\nimport styles from './Feedback.module.css';\r\n\r\nexport default class Feedback extends Component {\r\n  static defaultProps = {\r\n    good: 0,\r\n    bad: 0,\r\n    neutral: 0,\r\n  };\r\n\r\n  static propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n  };\r\n\r\n  state = {\r\n    good: this.props.good,\r\n    neutral: this.props.neutral,\r\n    bad: this.props.bad,\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    return this.state.good + this.state.neutral + this.state.bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const total = this.countTotalFeedback();\r\n    return Math.round((this.state.good / total) * 100);\r\n  };\r\n\r\n  handleFeedbackBtn = e => {\r\n    if (e.currentTarget.value === 'good') {\r\n      this.setState(prevState => ({\r\n        good: prevState.good + 1,\r\n      }));\r\n    } else if (e.currentTarget.value === 'neutral') {\r\n      this.setState(prevState => ({\r\n        neutral: prevState.neutral + 1,\r\n      }));\r\n    } else if (e.currentTarget.value === 'bad') {\r\n      this.setState(prevState => ({\r\n        bad: prevState.bad + 1,\r\n      }));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { good, bad, neutral } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <p className={styles.title}>Please leave feedback</p>\r\n        <FeedbackOptions onLeaveFeedback={this.handleFeedbackBtn} />\r\n        <Statistics\r\n          good={good}\r\n          bad={bad}\r\n          neutral={neutral}\r\n          total={this.countTotalFeedback()}\r\n          countPositiveFeedbackPercentage={this.countPositiveFeedbackPercentage()}\r\n        />\r\n        {this.countTotalFeedback() < 1 && <Notification />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport Feedback from './Feedback/Feedback';\r\n\r\nconst App = () => (\r\n  <Fragment>\r\n    <Feedback good={0} neutral={0} bad={0} />\r\n  </Fragment>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}